services:
    traefik:
        image: traefik:2.11
        command:
            --providers.docker=true
            --providers.docker.exposedByDefault=false
            --entryPoints.http.address=:80
        networks:
            - traefik-public
        ports:
            - "80:80"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public

    app:
        image: ${REGISTRY}/app:${IMAGE_TAG}
        networks:
            - traefik-public
            - default
        environment:
            APP_ENV: prod
            DB_HOST: app-postgres
            DB_USER: app
            DB_PASSWORD_FILE: /run/secrets/app_db_password
            DB_NAME: app
        secrets:
            - app_db_password
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.app.rule=Host(`localhost`)
            - traefik.http.routers.app.entryPoints=http
            - traefik.http.services.app.loadBalancer.server.port=80

    app-php-cli:
        image: ${REGISTRY}/app-php-cli:${IMAGE_TAG}
        environment:
            APP_ENV: prod
            DB_HOST: app-postgres
            DB_USER: app
            DB_PASSWORD_FILE: /run/secrets/app_db_password
            DB_NAME: app
        secrets:
            - app_db_password

    app-postgres:
        image: postgres:16.2-alpine
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD_FILE: /run/secrets/app_db_password
            POSTGRES_DB: app
        secrets:
            - app_db_password

    benchmark:
        image: ${REGISTRY}/benchmark:${IMAGE_TAG}
        network_mode: service:traefik

secrets:
    app_db_password:
        file: ./app/docker/development/secrets/app_db_password

networks:
    traefik-public:
        name: traefik-public
